[{"DOI": "10.48550/arXiv.2502.16982", "URL": "https://arxiv.org/abs/2502.16982", "abstract": "Recently, the Muon optimizer (K. Jordan et al. 2024) based on matrix orthogonalization has demonstrated strong results in training small-scale language models, but the scalability to larger models has not been proven. We identify two crucial techniques for scaling up Muon: (1) adding weight decay and (2) carefully adjusting the per-parameter update scale. These techniques allow Muon to work out-ofthe-box on large-scale training without the need of hyper-parameter tuning. Scaling law experiments indicate that Muon achieves \\sim 2 computational efficiency compared to AdamW with compute optimal training. Based on these improvements, we introduce Moonlight, a 3B/16B-parameter Mixture-of-Expert (MoE) model trained with 5.7T tokens using Muon. Our model improves the current Pareto frontier, achieving better performance with much fewer training FLOPs compared to prior models. We open-source our distributed Muon implementation that is memory optimal and communication efficient. We also release the pretrained, instruction-tuned, and intermediate checkpoints to support future research.", "accessed": {"date-parts": [[2025, 2, 26]]}, "author": [{"family": "Liu", "given": "Jingyuan"}, {"family": "Su", "given": "Jianlin"}, {"family": "Yao", "given": "Xingcheng"}, {"family": "Jiang", "given": "Zhejun"}, {"family": "Lai", "given": "Guokun"}, {"family": "Du", "given": "Yulun"}, {"family": "Qin", "given": "Yidao"}, {"family": "Xu", "given": "Weixin"}, {"family": "Lu", "given": "Enzhe"}, {"family": "Yan", "given": "Junjie"}, {"family": "Chen", "given": "Yanru"}, {"family": "Zheng", "given": "Huabin"}, {"family": "Liu", "given": "Yibo"}, {"family": "Liu", "given": "Shaowei"}, {"family": "Yin", "given": "Bohong"}, {"family": "He", "given": "Weiran"}, {"family": "Zhu", "given": "Han"}, {"family": "Wang", "given": "Yuzhi"}, {"family": "Wang", "given": "Jianzhou"}, {"family": "Dong", "given": "Mengnan"}, {"family": "Zhang", "given": "Zheng"}, {"family": "Kang", "given": "Yongsheng"}, {"family": "Zhang", "given": "Hao"}, {"family": "Xu", "given": "Xinran"}, {"family": "Zhang", "given": "Yutao"}, {"family": "Wu", "given": "Yuxin"}, {"family": "Zhou", "given": "Xinyu"}, {"family": "Yang", "given": "Zhilin"}], "id": "liuMuonScalableLLM2025", "issued": {"date-parts": [[2025, 2]]}, "keyword": "Computer Science - Artificial Intelligence,Computer Science - Computation and Language,Computer Science - Machine Learning", "language": "en-US", "number": "arXiv:2502.16982", "publisher": "arXiv", "title": "Muon is Scalable for LLM Training", "type": "", "original_bibtex": "@misc{liuMuonScalableLLM2025,\n title = {Muon Is {{Scalable}} for {{LLM Training}}},\n author = {Liu, Jingyuan and Su, Jianlin and Yao, Xingcheng and Jiang, Zhejun and Lai, Guokun and Du, Yulun and Qin, Yidao and Xu, Weixin and Lu, Enzhe and Yan, Junjie and Chen, Yanru and Zheng, Huabin and Liu, Yibo and Liu, Shaowei and Yin, Bohong and He, Weiran and Zhu, Han and Wang, Yuzhi and Wang, Jianzhou and Dong, Mengnan and Zhang, Zheng and Kang, Yongsheng and Zhang, Hao and Xu, Xinran and Zhang, Yutao and Wu, Yuxin and Zhou, Xinyu and Yang, Zhilin},\n year = {2025},\n doi = {10.48550/arXiv.2502.16982},\n urldate = {2025-02-26},\n number = {arXiv:2502.16982},\n publisher = {arXiv},\n file = {/home/kellen/Zotero/storage/JSHH2RNX/Liu et al. - 2025 - Muon is Scalable for LLM Training.pdf},\n keywords = {Computer Science - Artificial Intelligence,Computer Science - Computation and Language,Computer Science - Machine Learning},\n langid = {english},\n archiveprefix = {arXiv},\n abstract = {Recently, the Muon optimizer (K. Jordan et al. 2024) based on matrix orthogonalization has demonstrated strong results in training small-scale language models, but the scalability to larger models has not been proven. We identify two crucial techniques for scaling up Muon: (1) adding weight decay and (2) carefully adjusting the per-parameter update scale. These techniques allow Muon to work out-ofthe-box on large-scale training without the need of hyper-parameter tuning. Scaling law experiments indicate that Muon achieves {$\\sim$} 2{\\texttimes} computational efficiency compared to AdamW with compute optimal training. Based on these improvements, we introduce Moonlight, a 3B/16B-parameter Mixture-of-Expert (MoE) model trained with 5.7T tokens using Muon. Our model improves the current Pareto frontier, achieving better performance with much fewer training FLOPs compared to prior models. We open-source our distributed Muon implementation that is memory optimal and communication efficient. We also release the pretrained, instruction-tuned, and intermediate checkpoints to support future research.},\n primaryclass = {cs},\n eprint = {2502.16982},\n month = {February}\n}\n"}]