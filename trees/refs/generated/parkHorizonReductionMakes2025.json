[{"DOI": "10.48550/arXiv.2506.04168", "URL": "https://arxiv.org/abs/2506.04168", "abstract": "In this work, we study the scalability of offline reinforcement learning (RL) algorithms. In principle, a truly scalable offline RL algorithm should be able to solve any given problem, regardless of its complexity, given sufficient data, compute, and model capacity. We investigate if and how current offline RL algorithms match up to this promise on diverse, challenging, previously unsolved tasks, using datasets up to 1000x larger than typical offline RL datasets. We observe that despite scaling up data, many existing offline RL algorithms exhibit poor scaling behavior, saturating well below the maximum performance. We hypothesize that the horizon is the main cause behind the poor scaling of offline RL. We empirically verify this hypothesis through several analysis experiments, showing that long horizons indeed present a fundamental barrier to scaling up offline RL. We then show that various horizon reduction techniques substantially enhance scalability on challenging tasks. Based on our insights, we also introduce a minimal yet scalable method named SHARSA that effectively reduces the horizon. SHARSA achieves the best asymptotic performance and scaling behavior among our evaluation methods, showing that explicitly reducing the horizon unlocks the scalability of offline RL. Code: https://github.com/seohongpark/horizon-reduction", "accessed": {"date-parts": [[2025, 6, 14]]}, "author": [{"family": "Park", "given": "Seohong"}, {"family": "Frans", "given": "Kevin"}, {"family": "Mann", "given": "Deepinder"}, {"family": "Eysenbach", "given": "Benjamin"}, {"family": "Kumar", "given": "Aviral"}, {"family": "Levine", "given": "Sergey"}], "id": "parkHorizonReductionMakes2025", "issued": {"date-parts": [[2025, 6]]}, "keyword": "Computer Science - Artificial Intelligence,Computer Science - Machine Learning", "number": "arXiv:2506.04168", "publisher": "arXiv", "title": "Horizon Reduction Makes RL Scalable", "type": "", "original_bibtex": "@misc{parkHorizonReductionMakes2025,\n title = {Horizon {{Reduction Makes RL Scalable}}},\n author = {Park, Seohong and Frans, Kevin and Mann, Deepinder and Eysenbach, Benjamin and Kumar, Aviral and Levine, Sergey},\n year = {2025},\n doi = {10.48550/arXiv.2506.04168},\n urldate = {2025-06-14},\n number = {arXiv:2506.04168},\n publisher = {arXiv},\n file = {/home/kellen/Zotero/storage/GZMYP9DB/Park et al. - 2025 - Horizon Reduction Makes RL Scalable.pdf;/home/kellen/Zotero/storage/GF47MGGU/2506.html},\n keywords = {Computer Science - Artificial Intelligence,Computer Science - Machine Learning},\n archiveprefix = {arXiv},\n abstract = {In this work, we study the scalability of offline reinforcement learning (RL) algorithms. In principle, a truly scalable offline RL algorithm should be able to solve any given problem, regardless of its complexity, given sufficient data, compute, and model capacity. We investigate if and how current offline RL algorithms match up to this promise on diverse, challenging, previously unsolved tasks, using datasets up to 1000x larger than typical offline RL datasets. We observe that despite scaling up data, many existing offline RL algorithms exhibit poor scaling behavior, saturating well below the maximum performance. We hypothesize that the horizon is the main cause behind the poor scaling of offline RL. We empirically verify this hypothesis through several analysis experiments, showing that long horizons indeed present a fundamental barrier to scaling up offline RL. We then show that various horizon reduction techniques substantially enhance scalability on challenging tasks. Based on our insights, we also introduce a minimal yet scalable method named SHARSA that effectively reduces the horizon. SHARSA achieves the best asymptotic performance and scaling behavior among our evaluation methods, showing that explicitly reducing the horizon unlocks the scalability of offline RL. Code: https://github.com/seohongpark/horizon-reduction},\n primaryclass = {cs},\n eprint = {2506.04168},\n month = {June}\n}\n"}]