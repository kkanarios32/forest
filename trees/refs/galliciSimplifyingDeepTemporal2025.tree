% ["refs"]
\title{Simplifying Deep Temporal Difference Learning}
\date{2025-04}
\author/literal{Matteo Gallici}\author/literal{Mattie Fellows}\author/literal{Benjamin Ellis}\author/literal{Bartomeu Pou}\author/literal{Ivan Masmitja}\author/literal{Jakob Nicolaus Foerster}\author/literal{Mario Martin}
\taxon{Reference}
\meta{doi}{10.48550/arXiv.2407.04811}
\meta{external}{https://arxiv.org/abs/2407.04811}

\meta{bibtex}{\startverb
@misc{galliciSimplifyingDeepTemporal2025,
 title = {Simplifying {{Deep Temporal Difference Learning}}},
 author = {Gallici, Matteo and Fellows, Mattie and Ellis, Benjamin and Pou, Bartomeu and Masmitja, Ivan and Foerster, Jakob Nicolaus and Martin, Mario},
 year = {2025},
 doi = {10.48550/arXiv.2407.04811},
 urldate = {2025-08-01},
 number = {arXiv:2407.04811},
 publisher = {arXiv},
 file = {/home/kellen/Downloads/pdfs/storage/LLH8RCRZ/Gallici et al. - 2025 - Simplifying Deep Temporal Difference Learning.pdf},
 keywords = {Computer Science - Machine Learning},
 langid = {english},
 archiveprefix = {arXiv},
 abstract = {Q-learning played a foundational role in the field reinforcement learning (RL). However, TD algorithms with off-policy data, such as Q-learning, or nonlinear function approximation like deep neural networks require several additional tricks to stabilise training, primarily a large replay buffer and target networks. Unfortunately, the delayed updating of frozen network parameters in the target network harms the sample efficiency and, similarly, the large replay buffer introduces memory and implementation overheads. In this paper, we investigate whether it is possible to accelerate and simplify off-policy TD training while maintaining its stability. Our key theoretical result demonstrates for the first time that regularisation techniques such as LayerNorm can yield provably convergent TD algorithms without the need for a target network or replay buffer, even with off-policy data. Empirically, we find that online, parallelised sampling enabled by vectorised environments stabilises training without the need for a large replay buffer. Motivated by these findings, we propose PQN, our simplified deep online Q-Learning algorithm. Surprisingly, this simple algorithm is competitive with more complex methods like: Rainbow in Atari, PPO-RNN in Craftax, QMix in Smax, and can be up to 50x faster than traditional DQN without sacrificing sample efficiency. In an era where PPO has become the go-to RL algorithm, PQN reestablishes off-policy Q-learning as a viable alternative. We open-source our code at: https://github.com/mttga/purejaxql.},
 primaryclass = {cs},
 eprint = {2407.04811},
 month = {April}
}
\stopverb}