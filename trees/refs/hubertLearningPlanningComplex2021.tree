% ["references"]
\title{Learning and Planning in Complex Action Spaces}
\date{2021-04}
\author{Thomas Hubert}\author{Julian Schrittwieser}\author{Ioannis Antonoglou}\author{Mohammadamin Barekatain}\author{Simon Schmitt}\author{David Silver}
\taxon{Reference}
\meta{doi}{10.48550/arXiv.2104.06303}
\meta{external}{https://arxiv.org/abs/2104.06303}

\meta{bibtex}{\startverb
@misc{hubertLearningPlanningComplex2021,
 title = {Learning and {{Planning}} in {{Complex Action Spaces}}},
 author = {Hubert, Thomas and Schrittwieser, Julian and Antonoglou, Ioannis and Barekatain, Mohammadamin and Schmitt, Simon and Silver, David},
 year = {2021},
 doi = {10.48550/arXiv.2104.06303},
 urldate = {2025-03-31},
 number = {arXiv:2104.06303},
 publisher = {arXiv},
 file = {/home/kellen/Zotero/storage/AWL8Y6DZ/Hubert et al. - 2021 - Learning and Planning in Complex Action Spaces.pdf},
 keywords = {Computer Science - Machine Learning},
 langid = {english},
 archiveprefix = {arXiv},
 abstract = {Many important real-world problems have action spaces that are high-dimensional, continuous or both, making full enumeration of all possible actions infeasible. Instead, only small subsets of actions can be sampled for the purpose of policy evaluation and improvement. In this paper, we propose a general framework to reason in a principled way about policy evaluation and improvement over such sampled action subsets. This sample-based policy iteration framework can in principle be applied to any reinforcement learning algorithm based upon policy iteration. Concretely, we propose Sampled MuZero, an extension of the MuZero algorithm that is able to learn in domains with arbitrarily complex action spaces by planning over sampled actions. We demonstrate this approach on the classical board game of Go and on two continuous control benchmark domains: DeepMind Control Suite and Real-World RL Suite.},
 primaryclass = {cs},
 eprint = {2104.06303},
 month = {April}
}
\stopverb}